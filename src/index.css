@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Dark Power Theme Variables */
    --background: 0 0% 4%; /* #0a0a0a */
    --foreground: 0 0% 100%; /* #ffffff */

    --card: 0 0% 7%; /* #111111 */
    --card-foreground: 0 0% 100%;

    --popover: 0 0% 7%;
    --popover-foreground: 0 0% 100%;

    --primary: 0 100% 50%; /* #ff0000 */
    --primary-foreground: 0 0% 100%;

    --secondary: 0 0% 10%; /* #1a1a1a */
    --secondary-foreground: 0 0% 100%;

    --accent: 0 0% 13%; /* #222222 */
    --accent-foreground: 0 0% 100%;

    --muted: 0 0% 20%; /* #333333 */
    --muted-foreground: 0 0% 53%; /* #888888 */

    --destructive: 0 100% 50%; /* #ff0000 */
    --destructive-foreground: 0 0% 100%;

    --border: 0 0% 13%; /* #222222 */
    --input: 0 0% 13%;
    --ring: 0 100% 50%; /* #ff0000 */

    --radius: 0.5rem;

    /* Dark Power Gradients */
    --gradient-fade: linear-gradient(180deg, transparent, #0a0a0a);
    --gradient-radial: radial-gradient(ellipse at top, #111111, transparent);
    --gradient-dark-power: linear-gradient(135deg, #0a0a0a 0%, #111111 100%);
    --gradient-red-power: linear-gradient(135deg, #ff0000 0%, #cc0000 100%);
    --gradient-red-glow: linear-gradient(135deg, rgba(255, 0, 0, 0.1) 0%, rgba(204, 0, 0, 0.05) 100%);
    
    /* Dark Power Accents */
    --accent-red: 0 100% 50%; /* #ff0000 */
    --accent-red-hover: 0 100% 40%; /* #cc0000 */
    --accent-red-overlay: rgba(255, 0, 0, 0.1);
    
    /* Text Colors */
    --text-primary: #ffffff;
    --text-secondary: #888888;
    --text-tertiary: #666666;
    
    /* Surface Colors */
    --surface-main: #0a0a0a;
    --surface-card: #111111;
    --surface-elevated: #1a1a1a;
    
    /* Border Colors */
    --border-subtle: #222222;
    --border-hover: #333333;
    
    /* Shadows */
    --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.3);
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.4);
    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.5);
    --shadow-red-glow: 0 0 20px rgba(255, 0, 0, 0.3);
    --shadow-red-glow-lg: 0 0 40px rgba(255, 0, 0, 0.4);
    
    /* Animations */
    --transition-fast: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
}

@layer utilities {
  .gradient-fade {
    background: var(--gradient-fade);
  }
  
  .gradient-radial {
    background: var(--gradient-radial);
  }
  
  .gradient-dark-power {
    background: var(--gradient-dark-power);
  }
  
  .gradient-red-power {
    background: var(--gradient-red-power);
  }
  
  .gradient-red-glow {
    background: var(--gradient-red-glow);
  }
  
  .border-gradient {
    position: relative;
    border-radius: var(--radius);
  }
  
  .border-gradient::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    padding: 1px;
    background: linear-gradient(135deg, hsla(0, 0%, 100%, 0.1), transparent);
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
  }
  
  .border-gradient-red {
    position: relative;
    border-radius: var(--radius);
  }
  
  .border-gradient-red::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    padding: 1px;
    background: linear-gradient(135deg, #ff0000, #cc0000);
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
  }
  
  /* Dark Power specific utilities */
  .text-dark-primary {
    color: var(--text-primary);
  }
  
  .text-dark-secondary {
    color: var(--text-secondary);
  }
  
  .text-dark-tertiary {
    color: var(--text-tertiary);
  }
  
  .bg-dark-main {
    background-color: var(--surface-main);
  }
  
  .bg-dark-card {
    background-color: var(--surface-card);
  }
  
  .bg-dark-elevated {
    background-color: var(--surface-elevated);
  }
  
  .border-dark-subtle {
    border-color: var(--border-subtle);
  }
  
  .border-dark-hover {
    border-color: var(--border-hover);
  }
  
  .shadow-red-glow {
    box-shadow: var(--shadow-red-glow);
  }
  
  .shadow-red-glow-lg {
    box-shadow: var(--shadow-red-glow-lg);
  }
  
  /* Modern Vercel-style hover animations */
  .hover-lift {
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .hover-lift:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.3), 0 4px 6px -2px rgba(0, 0, 0, 0.1);
  }
  
  .hover-scale {
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .hover-scale:hover {
    transform: scale(1.02);
    box-shadow: 0 8px 20px -4px rgba(0, 0, 0, 0.2);
  }
  
  .hover-glow {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .hover-glow:hover {
    box-shadow: 0 0 0 1px rgba(255, 0, 0, 0.1), 0 4px 12px rgba(255, 0, 0, 0.15);
  }
  
  .hover-border {
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    border: 1px solid transparent;
  }
  
  .hover-border:hover {
    border-color: rgba(255, 0, 0, 0.3);
    box-shadow: 0 4px 12px rgba(255, 0, 0, 0.1);
  }
  
  .animate-fade-in {
    animation: fadeIn 0.8s ease-out;
  }
  
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-slide-up {
    animation: slideUp 0.8s cubic-bezier(0.16, 1, 0.3, 1);
  }
  
  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Mouse gradient follow animations */
  .animate-gradient-follow {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Smooth blur transitions */
  .animate-blur-smooth {
    transition: filter 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Particle Waves and Gradient Mesh Animations */
  @keyframes gradientShift {
    0% { 
      transform: scale(1) rotate(0deg);
      filter: hue-rotate(0deg);
    }
    50% { 
      transform: scale(1.05) rotate(2deg);
      filter: hue-rotate(180deg);
    }
    100% { 
      transform: scale(1.1) rotate(5deg);
      filter: hue-rotate(360deg);
    }
  }
  
  @keyframes meshMove {
    0% { 
      transform: translateX(0) translateY(0);
    }
    100% { 
      transform: translateX(60px) translateY(60px);
    }
  }

  @keyframes particleFloat {
    0%, 100% { 
      transform: translateY(0px) rotate(0deg);
    }
    50% { 
      transform: translateY(-20px) rotate(180deg);
    }
  }

  @keyframes waveMotion {
    0%, 100% { 
      transform: translateX(0) scaleY(1);
    }
    50% { 
      transform: translateX(10px) scaleY(1.1);
    }
  }

  .animate-gradient-shift {
    animation: gradientShift 8s ease-in-out infinite alternate;
  }

  .animate-mesh-move {
    animation: meshMove 10s linear infinite;
  }

  .animate-particle-float {
    animation: particleFloat 6s ease-in-out infinite;
  }

  .animate-wave-motion {
    animation: waveMotion 4s ease-in-out infinite;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}
